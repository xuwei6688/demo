package allocation;

public class TestAllocation {
    /**
     *  * VM参数：-verbose:gc  -Xms20M -Xmx20M -Xmn10M -XX:SurvivorRatio=8 -XX:+PrintGCDetails -XX:+UseSerialGC
     *  *  堆内存20M 新生代10M Eden和Survivor的比值为8
     *  *  TODO 为什么这里新生带发生GC前是8153K，而不是6千多？
     *  *  [GC (Allocation Failure) [DefNew: 8153K->637K(9216K), 0.0044680 secs] 8153K->6781K(19456K), 0.0045131 secs] [Times: user=0.00 sys=0.00, real=0.01 secs]
     *  * Heap
     *  *  def new generation   total 9216K, used 4899K [0x00000000fec00000, 0x00000000ff600000, 0x00000000ff600000)
     *  *   eden space 8192K,  52% used [0x00000000fec00000, 0x00000000ff0297b8, 0x00000000ff400000)
     *  *   from space 1024K,  62% used [0x00000000ff500000, 0x00000000ff59f790, 0x00000000ff600000)
     *  *   to   space 1024K,   0% used [0x00000000ff400000, 0x00000000ff400000, 0x00000000ff500000)
     *  *  tenured generation   total 10240K, used 6144K [0x00000000ff600000, 0x0000000100000000, 0x0000000100000000)
     *  *    the space 10240K,  60% used [0x00000000ff600000, 0x00000000ffc00030, 0x00000000ffc00200, 0x0000000100000000)
     *  *  Metaspace       used 3366K, capacity 4496K, committed 4864K, reserved 1056768K
     *  *   class space    used 369K, capacity 388K, committed 512K, reserved 1048576K
     */

    private static final int _1MB = 1024 * 1024;
    public static void testAllocation() {

        byte[] allocation1,allocation2,allocation3,allocation4;
        allocation1 = new byte[2 * _1MB];
        allocation2 = new byte[2 * _1MB];
        allocation3 = new byte[2 * _1MB];
        allocation4 = new byte[4 * _1MB];
    }

    /**
     * VM参数：-verbose:gc  -Xms20M -Xmx20M -Xmn10M -XX:SurvivorRatio=8 -XX:+PrintGCDetails -XX:+UseSerialGC -XX:PretenureSizeThreshold=3145728
     *
     * -XX:PretenureSizeThreshold=3145728 大于这个参数的对象直接在老年带分配
     *
     */
    public static void testPretenureSizeThereshold() {
        byte[] allocation;
        allocation = new byte[4 * _1MB];
    }

    /**
     *  VM参数：-verbose:gc  -Xms20M -Xmx20M -Xmn10M -XX:SurvivorRatio=8 -XX:+PrintGCDetails -XX:+UseSerialGC
     * -XX:MaxTenuringThreshold =1 对象晋级老年带的阈值
     */
    public static void testMaxTenuringThreshold{
        byte[] allocation1,allocation2,allocation3;
        allocation1 = new byte[_1MB / 4];

        allocation2 = new byte[2* _1MB];
        allocation3 = new byte[4 * _1MB];
//        allocation3 = null;
//        allocation3 = new byte[4 * _1MB];
    }

    //TODO 运行一个空的main方法eden区都2M占用，为什么？？？？？
    public static void main(String[] args) {
//        testMaxTenuringThreshold();
        System.out.println(System.getProperties());
    }
}